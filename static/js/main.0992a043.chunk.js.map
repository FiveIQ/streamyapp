{"version":3,"sources":["actions/types.js","apis/streams.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","axios","create","baseURL","historyy","createBrowserHistory","basename","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","formProps","className","meta","error","touched","label","input","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","streamformexport","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","streamcreateexport","connect","getState","userId","authreducer","post","history","push","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","header","content","actions","document","querySelector","StreamDelete","match","params","Fragment","deleteStream","to","stream","renderContent","renderActions","state","ownProps","streamreducer","delete","StreamEdit","editStream","initialValues","_","pick","patch","StreamList","fetchStreams","currentUserId","map","renderAdmin","isSignedIn","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","ref","style","width","controls","GoogleAuth","attemptSignIn","auth","signIn","attemptSignOut","signOut","onAuthChange","currentUser","getId","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","authReducer","action","streamReducer","mapKeys","omit","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.0992a043.chunk.js","sourcesContent":["export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';","import axios from 'axios';\n\nexport default axios.create({baseURL: \"https://www.simpchess.com\"});","import {createBrowserHistory} from 'history';\n\nconst historyy = createBrowserHistory({ basename: '/streamyapp' });\n\n\nexport default historyy;","import {SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM} from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\n\nexport const signIn = (userId) =>{\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {type: SIGN_OUT};\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const userId = getState().authreducer.userId;\n    const response = await streams.post('/streams', {...formValues, userId});\n    \n\n    dispatch( {\n        type: CREATE_STREAM,\n        payload: response.data\n    });\n\n    history.push('/');\n};\n\nexport const fetchStreams = () => async dispatch =>{\n    const response = await streams.get('/streams');\n    dispatch( {\n        type: FETCH_STREAMS,\n        payload: response.data\n    });\n};\n\nexport const fetchStream = (id) => async dispatch =>{\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch( {\n        type: FETCH_STREAM,\n        payload: response.data\n    });\n};\n\nexport const editStream = (id, formValues) => async dispatch =>{\n    const response = await streams.patch(`/streams/${id}`, formValues);\n    dispatch( {\n        type: EDIT_STREAM,\n        payload: response.data\n    });\n\n    history.push('/');\n};\n\nexport const deleteStream = (id) => async dispatch =>{\n    await streams.delete(`/streams/${id}`);\n    dispatch( {\n        type: DELETE_STREAM,\n        payload: id\n    });\n\n    history.push('/');\n};","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\nclass StreamForm extends React.Component {\n    renderError(meta) {\n        if (meta.touched && meta.error){\n            return (\n                <div className = \"ui error message\">\n                    <div className = \"header\">{meta.error}</div>\n                </div>\n            );\n        }\n\n    };\n\n\n    renderInput = (formProps) => {\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`;\n        return (\n            <div className = {className}>\n                <label>{formProps.label}</label>\n                <input {...formProps.input} autoComplete = \"off\"/>\n                {this.renderError(formProps.meta)}\n            </div>\n        );\n    };\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    };\n\n    render(){\n        return (\n            <form onSubmit = {this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field name = \"title\" component = {this.renderInput} label = \"enter title\"/>\n                <Field name = \"description\" component = {this.renderInput} label = \"enter description\"/>\n                <button className = \"ui button primary\">Submit</button>\n            </form>\n        );\n    };\n\n};\n\nconst validate = (formValues) =>{\n    const errors = {};\n\n    if (!formValues.title){\n        errors.title = \"entere a title reeee\"\n    }\n    if (!formValues.description){\n        errors.description = \"entere dexctiping\"\n    }\n\n    return errors;\n};\n\nconst streamformexport =  reduxForm({form: 'streamForm', validate})(StreamForm);\nexport default streamformexport;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStream} from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    };\n\n    render(){\n        return (\n            <div>\n                <h3>Create a stream</h3>\n                <StreamForm onSubmit={this.onSubmit} />\n            </div>\n        );\n    };\n\n};\n\nconst streamcreateexport = connect(null, {createStream})(StreamCreate);\nexport default streamcreateexport;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = props =>{\n    return ReactDOM.createPortal(\n        <div onClick = {props.onDismiss} className = \"ui dimmer modals visible active\">\n            <div onClick={(e) => e.stopPropagation()} className = \"ui standard modal visible active\">\n                <i onClick = {props.onDismiss} className = \"close icon\"></i>\n                <div className = \"header\">\n                    {props.header}\n                </div>\n                <div className = \"content\">\n                    {props.content}\n                </div>\n                <div className = \"actions\">\n                    {props.actions}\n                </div>\n            </div>\n        </div>,\n        document.querySelector('#modal')\n    );\n};\n\nexport default Modal;","import React from 'react';\nimport {connect} from 'react-redux';\nimport  {Link} from 'react-router-dom';\n\nimport Modal from '../Modal';\nimport history from '../../history';\nimport {fetchStream, deleteStream} from '../../actions';\n\nclass StreamDelete extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id)\n    };\n\n     renderActions(){\n         return(\n        <React.Fragment> \n            <button onClick={() => this.props.deleteStream(this.props.match.params.id)} className=\"ui negative button\">delete</button>\n            <Link to=\"/\" className=\"ui button\">cancel</Link>\n        </React.Fragment>\n         );\n     };\n\n     renderContent(){\n        if (!this.props.stream){\n            return \"loadin\";\n        }\n\n        else{\n            return \"are u sure u wanna delete? title: \" + this.props.stream.title;\n        }\n     };\n\n    render(){\n        return (\n            <div>\n                StreamDelete\n                <Modal header=\"delete?\" content={this.renderContent()} onDismiss={() => history.push(\"/\")} actions = {this.renderActions()}/>\n            </div>\n    );\n    }\n\n};\n\nconst mapStateToProps = (state, ownProps) =>{\n    return {stream: state.streamreducer[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStream, editStream} from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\n\nclass StreamEdit extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id)\n    };\n    \n    onSubmit = (formValues) =>{\n        this.props.editStream(this.props.match.params.id, formValues);\n        \n    };\n\n    render(){\n        if (!this.props.stream){\n            return <div>nostreamhere</div>;\n        }\n        else{\n\n            return (\n                <div>\n                    <h3>editstream</h3>\n                    <StreamForm\n                        initialValues={_.pick(this.props.stream, 'title', 'description')}\n                        onSubmit ={this.onSubmit}\n                        />\n                </div>\n            );\n        }\n    };\n\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {stream: state.streamreducer[ownProps.match.params.id]};\n};\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStreams} from '../../actions';\nimport {Link} from 'react-router-dom';\n\nclass StreamList extends React.Component {\n    componentDidMount(){\n        this.props.fetchStreams();\n    };\n    \n    renderAdmin(stream){\n        if (stream.userId === this.props.currentUserId){\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/edit/${stream.id}`} className = \"ui button primary\">edit</Link>\n                    <Link to={`/delete/${stream.id}`} className = \"ui button negative\">delete</Link>\n                </div>\n            );\n        }\n    };\n\n    renderList(){\n        return this.props.streams.map(stream => {\n            return(\n            <div className = \"item\" key ={stream.id}>\n                {this.renderAdmin(stream)}\n                <i className = \"large middle aligned icon camera\" />\n                <div className = \"content\">\n                    <Link to= {`/show/${stream.id}`} className = \"header\">\n                    {stream.title}\n                    </Link>\n                    <div className = \"description\">{stream.description}</div>\n                </div>\n            </div>\n            );\n        });\n    };\n\n    renderCreate(){\n        if (this.props.isSignedIn){\n            return (\n                <div>\n                    <Link to= \"create\" className = \"ui button primar\"> \n                        Create da stream\n                    </Link>\n                </div>\n            );\n        }\n    };\n\n    render(){\n        return (\n            <div>\n            <h2>streams</h2>\n            <div className = \"ui celled list\">{this.renderList()}</div>\n            {this.renderCreate()}\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streamreducer), \n        currentUserId: state.authreducer.userId,\n        isSignedIn: state.authreducer.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);","import React from 'react';\nimport flv from 'flv.js';\n\nimport {connect} from 'react-redux';\nimport {fetchStream} from '../../actions';\n\n\nclass StreamShow extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.videoRef = React.createRef();\n    };\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n        this.buildPlayer();\n    };\n    \n    componentDidUpdate(){\n        this.buildPlayer();\n    };\n\n    componentWillUnmount(){\n        this.player.destroy();\n    };\n\n    buildPlayer(){\n        if (this.player || !this.props.stream){\n            return;\n        }\n\n        else{\n            this.player = flv.createPlayer({\n                type: 'flv',\n                url: `https://www.simpchess.com:8000/live/${this.props.match.params.id}.flv`\n            });\n    \n            this.player.attachMediaElement(this.videoRef.current);\n            this.player.load();\n        }\n    };\n\n    render(){\n        if (!this.props.stream){\n            return <div>loading</div>;\n        }\n\n        else{\n            return (\n                <div>\n                    <video ref = {this.videoRef} style={{width: \"100%\" }} controls/>\n                    <h1>{this.props.stream.title}</h1>\n                    <h5>{this.props.stream.description}</h5>\n                </div>\n            );\n            \n        };\n\n    };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {stream: state.streamreducer[ownProps.match.params.id]};\n};\n\nexport default connect(mapStateToProps, {fetchStream})(StreamShow);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn, signOut} from '../actions';\n\n\nclass GoogleAuth extends React.Component {\n    componentDidMount(){\n        window.gapi.load('client:auth2', () =>{\n            window.gapi.client.init({\n                clientId: '1048850885197-bbpfntuqpmjfjckfenech4brhoo6aufm.apps.googleusercontent.com', \n                scope: 'email'\n            }).then(()=>{\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    };\n\n\n    attemptSignIn = () => {\n        this.auth.signIn();\n    };\n\n    attemptSignOut = () => {\n        this.auth.signOut();\n    };\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn){\n            this.props.signIn(this.auth.currentUser.get().getId());\n        }\n        else {\n            this.props.signOut();\n        }\n    };\n\n    renderAuthButton(){\n        if (this.props.isSignedIn === null){\n            return null;\n        }\n        else if (this.props.isSignedIn === true){\n            return (\n                <button onClick = {this.attemptSignOut} className = \"ui red google button\">\n                    <i className=\"google icon\" />\n                    Sign Out\n                </button>\n            );\n        }\n        else {\n            return (\n                <button onClick = {this.attemptSignIn} className = \"ui red google button\">\n                    <i className=\"google icon\" />\n                    {this.props.isSignedIn}\n                    Sign In\n                </button>\n            );\n        }\n    };\n    render(){\n        return <div>{this.renderAuthButton()}</div>;\n\n    };\n\n};\n\nconst mapStateToProps = (state) => {\n    return {isSignedIn: state.authreducer.isSignedIn};\n\n};\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n    return (\n        <div className = \"ui secondary pointing menu\">\n            <Link to = \"/\" className = \"item\" >Streamy</Link>\n            <div className = \"right menu\">\n                <Link to = \"/\" className = \"item\">ViewAllStreams</Link>\n                <GoogleAuth />\n            </div>\n\n\n\n        </div>\n    );\n\n};\n\nexport default Header;","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\n\nimport StreamCreate from './streams/StreamCreate';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './Header'\nimport history from '../history'\n\n\nconst App = () =>{\n    \n    return (<div>\n        <Router history = {history}>\n            <div>\n                <Header />\n                <Route path = \"/\"  exact component = {StreamList} />\n                <Route path = \"/show/:id\" exact component = {StreamShow} />\n                <Route path = \"/edit/:id\" exact component = {StreamEdit} />\n                <Route path = \"/delete/:id\" exact component = {StreamDelete} />\n                <Route path = \"/create\" exact component = {StreamCreate} />\n            </div>    \n        </Router>\n        </div>\n    );\n};\n\nexport default App;","import {SIGN_IN, SIGN_OUT} from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type){\n        case SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload};\n        case SIGN_OUT: \n            return {...state, isSignedIn: false, userId: null};\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import {CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM} from '../actions/types';\nimport _ from 'lodash';\n\nconst streamReducer = (state = {}, action) =>{\n    switch(action.type){\n        case EDIT_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n\n        case FETCH_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n\n        case FETCH_STREAMS:\n            return {...state, ..._.mapKeys(action.payload, 'id')};\n\n        case DELETE_STREAM:\n            return _.omit(state, action.payload);\n\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n\n        default:\n            return state;\n    };\n};\n\nexport default streamReducer;","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport {reducer as formReducer} from 'redux-form';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n    authreducer: authReducer,\n    form: formReducer,\n    streamreducer: streamReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}